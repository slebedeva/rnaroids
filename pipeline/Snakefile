shell.executable("/bin/bash")
shell.prefix("source ~/.bash_profile; ")
from os import path
import sys

""" Snakemake pipeline for RNA metabolism processing """ 

configfile: "config_rnaseq.yaml"
  
DATA = config["DATA"]
SRC = config["SRC"]
DBASES = config["DBASES"]
TRANSCRIPTS = config["TRANSCRIPTS"]
GENOME = config["GENOME"]
GENOME_DIR = config["GENOME_DIR"]
#CHROM_SIZES = config["CHROM_SIZES"] #will be created in bigwig rule
TRANSCRIPTS_FA = config["TRANSCRIPTS_FA"] #these will be generated by rsem index
#SALMON_IDX = config["SALMON_IDX"]
KALLISTO_IDX = config["KALLISTO_IDX"]
RSEM_IDX = config["RSEM_IDX"]
P5TRIM = config["5P"]
##my addition
THREADS = config["THR"]

ERCC_FA = config["ERCC_FA"]
RRNA_FA = config["RRNA_FA"]


#SAMPLE = config["SAMPLE"]
#READ = ["R1","R2"]
#REPLICATE = config["REPLICATE"]

## to do : get rid of replicate (because problems when not all combinations of sample and replicate present) (and because why)

(SAMPLE, READ, REPLICATE) = glob_wildcards(path.join(DATA, "fastq",
                    "raw_data","{sample}_{read}_{rep}.fastq.gz"))

## build list of chromosome for parallel execution over chromosomes ## we can do withour it
#CHROMS = [] 
#with open(CHROM_SIZES) as f:
#  for line in f:
#    try: 
#      chrom = line.split("\t")[0]
#    except IndexError:
#      sys.exit("{} chromsome entries are not properly formatted".format(CHROM_SIZES))
#    
#    CHROMS.append(chrom)

rule all:
  input:
    #### extract UMIs and trim ####
    expand("{data}/fastq/filtered/{sample}_{read}_{rep}_umi_trim_noercc.fastq.gz",
    data=DATA, sample = SAMPLE, read = READ, rep = REPLICATE),
    
    #### index and align data to erccs and rRNA####
    expand("{data}/fastq/filtered/erccs/{sample}_{rep}_ercc.bam", 
    data=DATA, sample = SAMPLE, rep = REPLICATE),
    [(DBASES + "/ercc/bowtie_idx/erccrRNA.{}.ebwt".format(x)) for x in [1, 2, 3, 4, "rev.1", "rev.2"]],

    #### star two-pass alignments ####
    ######## comment out the next two lines if omitting split per chromosome ########
    #expand("{data}/star/dedup/{sample}_{rep}/dedup_split_{chrom}_{sample}_{rep}.bam",
    #       chrom = CHROMS, data=DATA, sample = SAMPLE, rep = REPLICATE),
    expand("{data}/star/dedup/dedup_{sample}_{rep}.bam",
    data=DATA, sample = SAMPLE, rep = REPLICATE),
    expand("{data}/fastq/dedup/{sample}_{read}_{rep}.fastq.gz",
    data=DATA, sample = SAMPLE, read = READ, rep = REPLICATE),
    expand("{data}/star/secondpass/{sample}_{rep}_2pass.bam",
    data=DATA, sample = SAMPLE, rep = REPLICATE),

    #### salmon alignments ####
    #expand("{data}/salmon/{sample}_{rep}/quant.sf", 
    #data=DATA, sample = SAMPLE, rep = REPLICATE),
    
    #### kallisto alignments ####
    expand("{data}/kallisto/{sample}_{rep}/abundance.tsv",
    data=DATA, sample = SAMPLE, rep = REPLICATE),

    #### bigwigs ####
    expand("{data}/bigwigs/{sample}_{rep}_{orient}.bw",
    data=DATA, sample = SAMPLE, rep = REPLICATE, orient = ["fwd", "rev", "rev_neg"]),

    #### pri_rsem ####
    expand("{data}/pri_rsem/{sample}_{rep}/{sample}_{rep}.genes.results",
    data=DATA, sample = SAMPLE, rep = REPLICATE),

include: "rules/umi_extract_trim.snake"
include: "rules/trim_fqs.snake"
include: "rules/rRNA_ercc_removal.snake"
include: "rules/star_idx.snake"
include: "rules/star_two_pass.snake"
##include: "rules/salmon.snake"
include: "rules/kallisto.snake"    
include: "rules/make_bigwigs.snake"
include: "rules/pri_rsem.snake"
